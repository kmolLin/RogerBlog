<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>我的網誌 (虎尾科大機械設計系)</title><link href="http://github.io/RogerBlog/" rel="alternate"></link><link href="http://github.io/RogerBlog/feeds/2016g1.atom.xml" rel="self"></link><id>http://github.io/RogerBlog/</id><updated>2016-08-30T20:01:23+08:00</updated><entry><title>40323123 - 3d printer</title><link href="http://github.io/RogerBlog/40323123-3d-printer.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/40323123-3d-printer.html</id><summary type="html">&lt;p&gt;raspberry pi  connect 3d printer to control the 3d printer &lt;/p&gt;


&lt;p&gt;遠端控制3D列印
這邊使用的遠端列印是使用web client控制&lt;/p&gt;
&lt;p&gt;目前有兩套在觀望的系統~
一個是
&lt;a href="http://octoprint.org/download/"&gt;octopi&lt;/a&gt;
另一個是
&lt;a href="https://www.astroprint.com/downloads"&gt;Astropromt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者是我們自己寫一套
兩套皆使用樹梅派當為控制電腦及server
使用心得:在之前已經有安裝過octopi，使用狀況是不錯，但是gui介面有些許的問題，使用上是沒什麼大礙，在3D printer的控制板，做動方式，像是一般CNC一樣，接收
G指令
&lt;a href="http://reprap.org/wiki/G-code"&gt;Gcoce 大全&lt;/a&gt;
&lt;a href="http://www.slideshare.net/roboard/3d-printer-marlin"&gt;控制系統的code解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這兩套系統，都有開放原始碼，不過因為解析程式有巨大的阻礙，因為對python和樹梅派不熟悉，導致只會安裝不會自己編譯。&lt;/p&gt;</summary><category term="3d printer"></category></entry><entry><title>40323123 - 專題參考資料</title><link href="http://github.io/RogerBlog/40323123-zhuan-ti-can-kao-zi-liao.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/40323123-zhuan-ti-can-kao-zi-liao.html</id><summary type="html">&lt;p&gt;raspberry pi  connect 3d printer to control the 3d printer &lt;/p&gt;


&lt;p&gt;1.回報目前專題進度:
事項一:目前題目定義 製作一台3D printer跟atom同樣款式的
事項二:因為有三組的成員，目前分配如下所示&lt;/p&gt;
&lt;p&gt;40323123 這組:利用octopi來進行遠端控制，以及自動下料等的問題，自動下料的機構利用GA進行運算&lt;/p&gt;
&lt;p&gt;40323250 這組:進行組裝，設計，Onshape組裝，V-Rep(組裝設計模擬)&lt;/p&gt;
&lt;p&gt;黃婉菁這組:先利用opencv來產生3d module並轉換成stl進行列印(主要目的影像建模出3Dstl)&lt;/p&gt;
&lt;p&gt;參考資料:
1.octopi
&lt;a href="http://plugins.octoprint.org/"&gt;octopi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.octoprintDocs
&lt;a href="http://docs.octoprint.org/en/master/"&gt;octoprint Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.octopi_github
&lt;a href="https://github.com/foosel/OctoPrint/wiki"&gt;octoprint WIKI&lt;/a&gt;
&lt;a href="https://github.com/foosel/OctoPrint/wiki/FAQ"&gt;FAQ&lt;/a&gt;
&lt;a href="https://github.com/guysoft/OctoPi"&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.flux 3d printer中的底板樣式以及掃描方式
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/l9ZISxSo2X0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;5.OpenCv 3d nodule
&lt;a href="http://www.opencv.org.cn/"&gt;OpenCv可參考&lt;/a&gt;&lt;/p&gt;</summary><category term="3d printer"></category></entry><entry><title>40323123 - 專題組員的範例文章標題</title><link href="http://github.io/RogerBlog/40323123-zhuan-ti-zu-yuan-de-fan-li-wen-zhang-biao-ti.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/40323123-zhuan-ti-zu-yuan-de-fan-li-wen-zhang-biao-ti.html</id><summary type="html">&lt;p&gt;這裡放入 40323123 所寫的文章摘要&lt;/p&gt;


&lt;p&gt;這裡為 40323123 所寫的文章主要內容&lt;/p&gt;</summary><category term="範例"></category></entry><entry><title>保養3D列印機</title><link href="http://github.io/RogerBlog/bao-yang-3dlie-yin-ji.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/bao-yang-3dlie-yin-ji.html</id><summary type="html">&lt;p&gt;Control 3D printer and some Question&lt;/p&gt;


&lt;p&gt;1.第一步清理平台&lt;/p&gt;
&lt;p&gt;2.幫滑軌上專用潤滑油&lt;/p&gt;
&lt;p&gt;3.加熱後將線材退出&lt;/p&gt;
&lt;p&gt;4.清理機台外觀&lt;/p&gt;
&lt;p&gt;5.確保滑軌滑動順利&lt;/p&gt;
&lt;p&gt;約兩個禮拜做一次，自動校正，不要太長使用，會導致買新的噴頭。
詳細注意事項，在另行公告&lt;/p&gt;</summary><category term="3d printer"></category></entry><entry><title>OpenCv實作</title><link href="http://github.io/RogerBlog/opencvshi-zuo.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/opencvshi-zuo.html</id><summary type="html">&lt;p&gt;OpenCv in python and use&lt;/p&gt;


&lt;p&gt;實作系統Ubuntu 14.04&lt;/p&gt;
&lt;p&gt;剛開始必須要先安裝依些相關的compiler以及設定黨
步驟如同老師所下載的順序
&lt;pre class="brush: python"&gt;&lt;/p&gt;
&lt;h1&gt;apt-get 更新&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get update&lt;/p&gt;
&lt;h1&gt;apt-get 升級&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get upgrade&lt;/p&gt;
&lt;h1&gt;安裝所需的開發套件&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get install build-essential cmake git pkg-config&lt;/p&gt;
&lt;h1&gt;安裝編譯過程所需的程式庫&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get install libjpeg8-dev libtiff4-dev libjasper-dev libpng12-dev&lt;/p&gt;
&lt;h1&gt;安裝編譯過程所需的程式庫&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev&lt;/p&gt;
&lt;h1&gt;安裝編譯過程所需的程式庫&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get install libgtk2.0-dev&lt;/p&gt;
&lt;h1&gt;安裝編譯過程所需的 fortran 編譯器&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get install libatlas-base-dev gfortran&lt;/p&gt;
&lt;h1&gt;安裝編譯過程所需的原始碼&lt;/h1&gt;
&lt;p&gt;$ sudo apt-get install python3.4-dev&lt;/p&gt;
&lt;h1&gt;本台機器的 python 為 2.7 版, 而 python3 則為 python 3.4, 這裡安裝 numpy  模組&lt;/h1&gt;
&lt;p&gt;$ sudo pip3 install numpy&lt;/p&gt;
&lt;h1&gt;希望在帳號目錄下的 tmp 進行編譯工作&lt;/h1&gt;
&lt;p&gt;$ cd&lt;/p&gt;
&lt;h1&gt;new folder&lt;/h1&gt;
&lt;p&gt;$ mkdir tmp&lt;/p&gt;
&lt;h1&gt;更換目錄到 tmp&lt;/h1&gt;
&lt;p&gt;$ cd tmp&lt;/p&gt;
&lt;h1&gt;利用 git clone 取得原始碼&lt;/h1&gt;
&lt;p&gt;$ git clone https://github.com/Itseez/opencv.git&lt;/p&gt;
&lt;h1&gt;準備進入倉儲切換分支&lt;/h1&gt;
&lt;p&gt;$ cd opencv&lt;/p&gt;
&lt;h1&gt;採用 3.1.0 版&lt;/h1&gt;
&lt;p&gt;$ git checkout 3.1.0&lt;/p&gt;
&lt;h1&gt;回到用戶目錄&lt;/h1&gt;
&lt;p&gt;$ cd ..&lt;/p&gt;
&lt;h1&gt;再利用 git clone 下載原始碼&lt;/h1&gt;
&lt;p&gt;$ git clone https://github.com/Itseez/opencv_contrib.git&lt;/p&gt;
&lt;h1&gt;準備進入倉儲切換分支&lt;/h1&gt;
&lt;p&gt;$ cd opencv_contrib&lt;/p&gt;
&lt;h1&gt;與 opencv 配合, 採用 3.1.0 版&lt;/h1&gt;
&lt;p&gt;$ git checkout 3.1.0&lt;/p&gt;
&lt;p&gt;$ cd ..&lt;/p&gt;
&lt;h1&gt;準備開始建立程式庫&lt;/h1&gt;
&lt;p&gt;$ cd opencv&lt;/p&gt;
&lt;p&gt;$ mkdir build&lt;/p&gt;
&lt;p&gt;$ cd build&lt;/p&gt;
&lt;h1&gt;這裡會同時建立 Python2 與 Python3 的 OpenCV 程式庫檔案&lt;/h1&gt;
&lt;p&gt;$ cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D PYTHON_EXECUTABLE=$(which python3) \
    -D OPENCV_EXTRA_MODULES_PATH= ./../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..&lt;/p&gt;
&lt;p&gt;$ make -j4&lt;/p&gt;
&lt;p&gt;$ sudo make install&lt;/p&gt;
&lt;p&gt;$ sudo ldconfig&lt;/p&gt;
&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://coursemdetw.github.io/project_site_files/files/2016spring/opencv_python3_windows.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;有做些許更改同樣也可以達到使用上的設定&lt;/p&gt;
&lt;p&gt;windows中
只需要開起2016spring中把py檔
用cmd line 來執行
下python3 你的程式碼的名子
只要有攝影機就可以執行
請注意
必須要裝好攝影機的驅動才可以執行cvcapture(0)
否則無法執行
0是預設的第1台攝影機
1是第2台
以此類推&lt;/p&gt;</summary><category term="OpenCv"></category></entry><entry><title>R2C2的資料</title><link href="http://github.io/RogerBlog/r2c2de-zi-liao.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/r2c2de-zi-liao.html</id><summary type="html">&lt;p&gt;新的R2C2資料&lt;/p&gt;


&lt;p&gt;中間有新的資料for raspberrypi
是使用node.js啟動server
client端可以看到的
https://github.com/nneves/Raspberrypi_NodeJS&lt;/p&gt;
&lt;p&gt;&lt;a href = "https://github.com/nneves/R2C2_WebInterface/blob/master/README.md"&gt;RaspberryPi R2C2&lt;/a&gt;&lt;/p&gt;</summary><category term="client control"></category></entry><entry><title>樹梅派指令表和使用</title><link href="http://github.io/RogerBlog/shu-mei-pai-zhi-ling-biao-he-shi-yong.html" rel="alternate"></link><updated>2016-08-30T20:01:23+08:00</updated><author><name>40323123</name></author><id>tag:github.io,2016-08-30:RogerBlog/shu-mei-pai-zhi-ling-biao-he-shi-yong.html</id><summary type="html">&lt;p&gt;找到的些許文章和探討&lt;/p&gt;


&lt;p&gt;在Octoprint底下有個資料夾&lt;/p&gt;
&lt;p&gt;底層有些方法包括模組以及設定檔&lt;/p&gt;
&lt;p&gt;linux指令:&lt;/p&gt;
&lt;p&gt;cp&lt;/p&gt;
&lt;p&gt;mv&lt;/p&gt;
&lt;p&gt;指令再raspberry pi 要熟悉，因為在搬移檔案以及設定檔案，會常使用到，以及設定需要的檔案，像是網路的方法，以及未來可能要用到的USB掛載
&lt;pre class="brush: python"&gt;&lt;/p&gt;
&lt;h1&gt;先檢查自己找到的usb數量&lt;/h1&gt;
&lt;p&gt;$ sudo fdisk -l&lt;/p&gt;
&lt;h1&gt;...省略...&lt;/h1&gt;
&lt;h1&gt;Device         Boot  Start      End  Sectors  Size Id Type&lt;/h1&gt;
&lt;h1&gt;/dev/mmcblk0p1        8192   137215   129024   63M  c W95 FAT32 (LBA)&lt;/h1&gt;
&lt;h1&gt;/dev/mmcblk0p2      137216 31116287 30979072 14.8G 83 Linux&lt;/h1&gt;
&lt;p&gt;$ sudo mkdir /media/usbstick
$ sudo chown pi:pi /media/usbstick &lt;/p&gt;
&lt;h1&gt;手動掛載&lt;/h1&gt;
&lt;p&gt;$ sudo mount -t vfat -o uid=pi,gid=pi /dev/sda1 /media/usbstick&lt;/p&gt;
&lt;h1&gt;就可以進行存取&lt;/h1&gt;
&lt;h1&gt;要拔除時要下指令&lt;/h1&gt;
&lt;p&gt;$ sudo umount /media/usbstick&lt;/p&gt;
&lt;p&gt;&lt;/pre&gt;
&lt;img src="http://i.imgur.com/kkeiJv2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/DeYzBNo.jpg"&gt;&lt;/p&gt;
&lt;p&gt;在這些設定檔中使用到的可以更改圖片或者是把程式碼拿出來理解目前解讀進度:&lt;/p&gt;
&lt;p&gt;1.再octoprint中有將各模組拆開來，近日把python的設定看完，可能會接近5%的進度&lt;/p&gt;
&lt;p&gt;2.圖片用到的部分，可能要從新Make(command)才可以用&lt;/p&gt;
&lt;p&gt;待完成部分:&lt;/p&gt;
&lt;p&gt;1.javascript&lt;/p&gt;
&lt;p&gt;2.往後寫出一套for our flask.py&lt;/p&gt;
&lt;p&gt;3.plugin部分&lt;/p&gt;</summary><category term="octopi"></category></entry></feed>