{"pages":[{"title":"About","url":"https://smpss91341.github.io/RogerBlog/blog/pages/about/","tags":"misc","text":"機械設計專題網誌 http://project.mde.tw 是台灣國立虎尾科技大學機械設計工程系 (Department of Mechanical Design Engineering, National Formosa University, Taiwan ) KMOL 研究室 (Knowledge Management and Optimal utilization Laboratory) 專題網站, 與課程相關的網誌位於 http://chiamingyen.github.io/kmolab/blog/ . 本網誌的所有資料位於 https://github.com/coursemdetw/project_site , 除了所引用的資料特別聲明各自所宣告的使用授權外, 一律採用 AGPL 授權 https://github.com/coursemdetw/project_site/blob/gh-pages/LICENSE . 歡迎您的蒞臨! 專題成員 https://github.com/coursemdetw/project_site/watchers"},{"title":"40323123 - 3d printer","url":"https://smpss91341.github.io/RogerBlog/blog/40323123-3d-printer.html","tags":"2016g1","text":"raspberry pi connect 3d printer to control the 3d printer 遠端控制3D列印 這邊使用的遠端列印是使用web client控制 目前有兩套在觀望的系統~ 一個是 octopi 另一個是 Astropromt 或者是我們自己寫一套 兩套皆使用樹梅派當為控制電腦及server 使用心得:在之前已經有安裝過octopi，使用狀況是不錯，但是gui介面有些許的問題，使用上是沒什麼大礙，在3D printer的控制板，做動方式，像是一般CNC一樣，接收 G指令 Gcoce 大全 控制系統的code解析 這兩套系統，都有開放原始碼，不過因為解析程式有巨大的阻礙，因為對python和樹梅派不熟悉，導致只會安裝不會自己編譯。"},{"title":"40323123 - 專題參考資料","url":"https://smpss91341.github.io/RogerBlog/blog/40323123-zhuan-ti-can-kao-zi-liao.html","tags":"2016g1","text":"raspberry pi connect 3d printer to control the 3d printer 1.回報目前專題進度: 事項一:目前題目定義 製作一台3D printer跟atom同樣款式的 事項二:因為有三組的成員，目前分配如下所示 40323123 這組:利用octopi來進行遠端控制，以及自動下料等的問題，自動下料的機構利用GA進行運算 40323250 這組:進行組裝，設計，Onshape組裝，V-Rep(組裝設計模擬) 黃婉菁這組:先利用opencv來產生3d module並轉換成stl進行列印(主要目的影像建模出3Dstl) 參考資料: 1.octopi octopi 2.octoprintDocs octoprint Docs 3.octopi_github octoprint WIKI FAQ Github 4.flux 3d printer中的底板樣式以及掃描方式 5.OpenCv 3d nodule OpenCv可參考"},{"title":"40323123 - 專題組員的範例文章標題","url":"https://smpss91341.github.io/RogerBlog/blog/40323123-zhuan-ti-zu-yuan-de-fan-li-wen-zhang-biao-ti.html","tags":"2016g1","text":"這裡放入 40323123 所寫的文章摘要 這裡為 40323123 所寫的文章主要內容"},{"title":"About","url":"https://smpss91341.github.io/RogerBlog/blog/about.html","tags":"misc","text":"機械設計專題網誌 http://project.mde.tw 是台灣國立虎尾科技大學機械設計工程系 (Department of Mechanical Design Engineering, National Formosa University, Taiwan ) KMOL 研究室 (Knowledge Management and Optimal utilization Laboratory) 專題網站, 與課程相關的網誌位於 http://chiamingyen.github.io/kmolab/blog/ . 本網誌的所有資料位於 https://github.com/coursemdetw/project_site , 除了所引用的資料特別聲明各自所宣告的使用授權外, 一律採用 AGPL 授權 https://github.com/coursemdetw/project_site/blob/gh-pages/LICENSE . 歡迎您的蒞臨! 專題成員 https://github.com/coursemdetw/project_site/watchers"},{"title":"保養3D列印機","url":"https://smpss91341.github.io/RogerBlog/blog/bao-yang-3dlie-yin-ji.html","tags":"2016g1","text":"Control 3D printer and some Question 1.第一步清理平台 2.幫滑軌上專用潤滑油 3.加熱後將線材退出 4.清理機台外觀 5.確保滑軌滑動順利 約兩個禮拜做一次，自動校正，不要太長使用，會導致買新的噴頭。 詳細注意事項，在另行公告"},{"title":"OpenCv實作","url":"https://smpss91341.github.io/RogerBlog/blog/opencvshi-zuo.html","tags":"2016g1","text":"OpenCv in python and use 實作系統Ubuntu 14.04 剛開始必須要先安裝依些相關的compiler以及設定黨 步驟如同老師所下載的順序 apt-get 更新 $ sudo apt-get update apt-get 升級 $ sudo apt-get upgrade 安裝所需的開發套件 $ sudo apt-get install build-essential cmake git pkg-config 安裝編譯過程所需的程式庫 $ sudo apt-get install libjpeg8-dev libtiff4-dev libjasper-dev libpng12-dev 安裝編譯過程所需的程式庫 $ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev 安裝編譯過程所需的程式庫 $ sudo apt-get install libgtk2.0-dev 安裝編譯過程所需的 fortran 編譯器 $ sudo apt-get install libatlas-base-dev gfortran 安裝編譯過程所需的原始碼 $ sudo apt-get install python3.4-dev 本台機器的 python 為 2.7 版, 而 python3 則為 python 3.4, 這裡安裝 numpy 模組 $ sudo pip3 install numpy 希望在帳號目錄下的 tmp 進行編譯工作 $ cd new folder $ mkdir tmp 更換目錄到 tmp $ cd tmp 利用 git clone 取得原始碼 $ git clone https://github.com/Itseez/opencv.git 準備進入倉儲切換分支 $ cd opencv 採用 3.1.0 版 $ git checkout 3.1.0 回到用戶目錄 $ cd .. 再利用 git clone 下載原始碼 $ git clone https://github.com/Itseez/opencv_contrib.git 準備進入倉儲切換分支 $ cd opencv_contrib 與 opencv 配合, 採用 3.1.0 版 $ git checkout 3.1.0 $ cd .. 準備開始建立程式庫 $ cd opencv $ mkdir build $ cd build 這裡會同時建立 Python2 與 Python3 的 OpenCV 程式庫檔案 $ cmake -D CMAKE_BUILD_TYPE=RELEASE \\ -D CMAKE_INSTALL_PREFIX=/usr/local \\ -D INSTALL_C_EXAMPLES=OFF \\ -D INSTALL_PYTHON_EXAMPLES=ON \\ -D PYTHON_EXECUTABLE=$(which python3) \\ -D OPENCV_EXTRA_MODULES_PATH= ./../../opencv_contrib/modules \\ -D BUILD_EXAMPLES=ON .. $ make -j4 $ sudo make install $ sudo ldconfig 有做些許更改同樣也可以達到使用上的設定 windows中 只需要開起2016spring中把py檔 用cmd line 來執行 下python3 你的程式碼的名子 只要有攝影機就可以執行 請注意 必須要裝好攝影機的驅動才可以執行cvcapture(0) 否則無法執行 0是預設的第1台攝影機 1是第2台 以此類推"},{"title":"R2C2的資料","url":"https://smpss91341.github.io/RogerBlog/blog/r2c2de-zi-liao.html","tags":"2016g1","text":"新的R2C2資料 中間有新的資料for raspberrypi 是使用node.js啟動server client端可以看到的 https://github.com/nneves/Raspberrypi_NodeJS RaspberryPi R2C2"},{"title":"樹梅派指令表和使用","url":"https://smpss91341.github.io/RogerBlog/blog/shu-mei-pai-zhi-ling-biao-he-shi-yong.html","tags":"2016g1","text":"找到的些許文章和探討 在Octoprint底下有個資料夾 底層有些方法包括模組以及設定檔 linux指令: cp mv 指令再raspberry pi 要熟悉，因為在搬移檔案以及設定檔案，會常使用到，以及設定需要的檔案，像是網路的方法，以及未來可能要用到的USB掛載 先檢查自己找到的usb數量 $ sudo fdisk -l ...省略... Device Boot Start End Sectors Size Id Type /dev/mmcblk0p1 8192 137215 129024 63M c W95 FAT32 (LBA) /dev/mmcblk0p2 137216 31116287 30979072 14.8G 83 Linux $ sudo mkdir /media/usbstick $ sudo chown pi:pi /media/usbstick 手動掛載 $ sudo mount -t vfat -o uid=pi,gid=pi /dev/sda1 /media/usbstick 就可以進行存取 要拔除時要下指令 $ sudo umount /media/usbstick 在這些設定檔中使用到的可以更改圖片或者是把程式碼拿出來理解目前解讀進度: 1.再octoprint中有將各模組拆開來，近日把python的設定看完，可能會接近5%的進度 2.圖片用到的部分，可能要從新Make(command)才可以用 待完成部分: 1.javascript 2.往後寫出一套for our flask.py 3.plugin部分"},{"title":"user - 使用者的範例網誌文章標題","url":"https://smpss91341.github.io/RogerBlog/blog/user-shi-yong-zhe-de-fan-li-wang-zhi-wen-zhang-biao-ti.html","tags":"Tutorial","text":"這裡放入 user 所寫的文章摘要 這裡為 user 所寫的文章主要內容"}]}